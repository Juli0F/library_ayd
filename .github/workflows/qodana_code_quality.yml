name: CI/CD for Spring Boot Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.5
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Run tests
        run: mvn test

      - name: Build project
        run: mvn package -DskipTests

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
          INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        run: |
          aws ec2 describe-instances --instance-ids $INSTANCE_ID
          scp -o StrictHostKeyChecking=no target/your-app.jar ec2-user@${{ secrets.EC2_INSTANCE_PUBLIC_DNS }}:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_PUBLIC_DNS }} << 'EOF'
            sudo systemctl stop your-app
            sudo cp /home/ec2-user/your-app.jar /opt/your-app/your-app.jar
            sudo systemctl start your-app
          EOF
