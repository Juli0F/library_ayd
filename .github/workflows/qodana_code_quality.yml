name: CI/CD for Spring Boot Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.5
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Run tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword
        run: mvn test

      - name: Build project
        run: mvn package -DskipTests

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Copy files via SCP
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
            chmod 600 key.pem
            scp -i key.pem -o "StrictHostKeyChecking=no" library-0.0.1-SNAPSHOT.jar ec2-user@${{secrets.IP_VPC}}:/home/ec2-user/
      - name: Deploy JAR on EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          run: |
            ssh -i key.pem -o "StrictHostKeyChecking=no" ec2-user@${{secrets.IP_VPC}} << 'EOF'
              nohup java -jar /home/ec2-user/library-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
            EOF
#
#    - name: Deploy to EC2
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        AWS_REGION: us-west-2
#        INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
#      run: |
#        aws ec2 describe-instances --instance-ids $INSTANCE_ID
#        scp -o StrictHostKeyChecking=no target/your-app.jar ec2-user@${{ secrets.IP_VPC }}:/home/ec2-user/
#        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.IP_VPC }} << 'EOF'
#          sudo systemctl stop your-app
#          sudo cp /home/ec2-user/your-app.jar /opt/your-app/your-app.jar
#          sudo systemctl start your-app
#        EOF
